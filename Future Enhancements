Improvements:
1 - Introduce new tables
    1.1 - Size Table
        ```
            model Size {
                id        Int     @id @default(autoincrement())
                name      String
                productVariation   ProductVariation[]
            }

            model ProductVariation {
                id        Int @id @default(autoincrement())
                productId Int
                colorId   Int
                sizeId    Int
                name      String
                quantity  Int
                threshold Int

                product   Product @relation(fields: [productId], references: [id])
                color     Color   @relation(fields: [colorId], references: [id])
                size      Size   @relation(fields: [sizeId], references: [id])

                orderLineProductVariations OrderLineProductVariation[]
            }
        ```

    1.2 - ProductCategories Table
        ```
            model ProductCategory {
                id            Int     @id @default(autoincrement())
                name          String
                productType   ProductType[]
            }
            model ProductType {
                id            Int     @id @default(autoincrement())
                name          String
                isPrintable   Boolean
                isPaint       Boolean
                isTool        Boolean
                productCategoryId Int

                category  ProductCategory    @relation(fields: [productCategoryId], references: [id])
                product   Product[]
            }
        ```

4 - Ability to track the status history
    4.1 - Create a new `OrderStatusHistory` model
        ```
            model OrderStatusHistory {
                id         Int      @id @default(autoincrement())
                orderId    Int
                fromStatus Int
                toStatus   Int
                changedAt  DateTime @default(now())
                changedBy  String?

                order      Order    @relation(fields: [orderId], references: [id])

                @@index([orderId])
            }
        ```
    4.2 - Adjust `Order` model to consider the `OrderStatusHistory`
        ```
            model Order {
                id          Int              @id @default(autoincrement())
                companyId   Int
                orderType   OrderType
                orderStatus Int              // Still using OrderStatusEnum values
                totalPrice  Decimal          @db.Decimal(10, 2) @default(0.00)
                date        DateTime

                company     Company?         @relation(fields: [companyId], references: [id])
                orderLine   OrderLine[]
                shipping    Shipping?
                statusHistory OrderStatusHistory[]
            }
        ```

5 - Migrate `PaintType` enum to model for more flexibility (This will help with point 3)
    ```
        model PaintType {
          id    Int     @id @default(autoincrement())
          name  String  @unique
          code  String  @unique // Optional short code like 'PVC', 'EAU'

          orderLines OrderLine[]
        }
    ```

6 - Split `Product` model to `PrintSupport`, `Tools`, and `Paint`
    6.1 - `PrintSupport` (Sac, Mug, Papier Cartone, ...)
    6.2 - `Tools` (Cadre, Raclete, ...)
    6.3 - `Paint` (PVC, EAU, TONNER, ...)

7 - Add support for PrintType (serigraphie, numeric, DTF, ...) in orders

8 - Include customer designs in an inner table of the customers, and remove design menu

9 - client dashboard
    - number of orders
    - chiffre d'affaire
    - number of bags
    - ...

10- Add Dashboard

11- Add Authentication