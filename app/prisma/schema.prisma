generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum CompanyType {
  Client
  Livreur
  Fournisseur
}

enum OrderType {
  Achats
  Ventes
}

enum PaintType {
  PVC
  EAU
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String
  password String
}

model City {
  id   Int    @id @default(autoincrement())
  name String

  company Company[]
}

model Color {
  id       Int    @id @default(autoincrement())
  name     String
  htmlCode String

  productVariation ProductVariation[]
}

model Expense {
  id         Int      @id @default(autoincrement())
  name       String
  totalPrice Decimal  @default(0.00) @db.Decimal(10, 2)
  date       DateTime
  isOrder    Boolean
  isShipping Boolean
  orderId    Int?
}

model Shipping {
  orderId      Int       @id
  companyId    Int
  shippingCode String
  shippingDate DateTime?
  deliveryDate DateTime?
  price        Decimal   @default(0.00) @db.Decimal(10, 2)

  order   Order   @relation(fields: [orderId], references: [id])
  shipper Company @relation(fields: [companyId], references: [id])
}

model Company {
  id          Int         @id @default(autoincrement())
  name        String
  companyType CompanyType
  phone       String?     @unique
  cityId      Int

  city           City            @relation(fields: [cityId], references: [id])
  orders         Order[]
  shipping       Shipping[]
  companyDesigns CompanyDesign[]
}

model CompanyDesign {
  id         Int    @id @default(autoincrement())
  designName String
  companyId  Int

  company      Company       @relation(fields: [companyId], references: [id])
  designImages DesignImage[]
  orderLine    OrderLine[]
}

model DesignImage {
  id              Int    @id @default(autoincrement())
  imageUrl        String
  companyDesignId Int

  companyDesign CompanyDesign @relation(fields: [companyDesignId], references: [id])
}

model ProductType {
  id   Int    @id @default(autoincrement())
  name String

  product Product[]
}

model Product {
  id   Int    @id @default(autoincrement())
  name String

  isLayer     Boolean
  isPaint     Boolean
  isSellable  Boolean
  isPrintable Boolean
  isPaintTool Boolean
  isPrintTool Boolean

  productTypeId Int

  productType      ProductType        @relation(fields: [productTypeId], references: [id])
  productVariation ProductVariation[]
}

model ProductVariation {
  id        Int    @id @default(autoincrement())
  productId Int
  colorId   Int
  name      String
  size      String
  quantity  Int
  threshold Int

  product                     Product                      @relation(fields: [productId], references: [id])
  color                       Color                        @relation(fields: [colorId], references: [id])
  orderLine                   OrderLine[]
  orderLineConsumedVariations OrderLineConsumedVariation[]
}

model Order {
  id               Int       @id @default(autoincrement())
  companyId        Int
  orderType        OrderType
  orderStatus      Int
  totalPrice       Decimal   @default(0.00) @db.Decimal(10, 2)
  date             DateTime
  inventoryUpdated Boolean
  expenseUpdated   Boolean

  company   Company     @relation(fields: [companyId], references: [id])
  orderLine OrderLine[]
  shipping  Shipping?
}

model OrderLine {
  id      Int @id @default(autoincrement())
  orderId Int

  designId           Int?
  productVariationId Int
  quantity           Int
  finalQuantity      Int
  unitPrice          Decimal @default(0.00) @db.Decimal(10, 2)

  order            Order            @relation(fields: [orderId], references: [id])
  productVariation ProductVariation @relation(fields: [productVariationId], references: [id])
  design           CompanyDesign?   @relation(fields: [designId], references: [id])

  consumedVariations OrderLineConsumedVariation[]
}

model OrderLineConsumedVariation {
  orderLineId        Int
  productVariationId Int
  quantity           Int
  finalQuantity      Int

  orderLine        OrderLine        @relation(fields: [orderLineId], references: [id])
  productVariation ProductVariation @relation(fields: [productVariationId], references: [id])

  @@id([orderLineId, productVariationId])
}
