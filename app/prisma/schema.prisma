generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum CompanyType {
  Client
  Livreur
  Fournisseur
}

enum OrderType {
  Achats
  Ventes
}

enum PaintType {
  PVC
  EAU
}

model User {
  id        Int     @id @default(autoincrement())
  name      String
  email     String
  password  String
}

model Color {
  id        Int     @id @default(autoincrement())
  name      String
  htmlCode  String

  productVariation   ProductVariation[]
  orderLine          OrderLineColor[]
}

model Expense {
  id         Int      @id @default(autoincrement())
  name       String
  totalPrice Decimal  @db.Decimal(10, 2) @default(0.00)
  date       DateTime
  isOrder    Boolean
  isShipping Boolean
  orderId    Int?
}

model Shipping {
  orderId      Int @id
  shipperId    Int
  shippingDate DateTime?
  deliveryDate DateTime?
  price        Decimal @db.Decimal(10, 2) @default(0.00)

  order        Order   @relation(fields: [orderId], references: [id])
  shipper      Company @relation(fields: [shipperId], references: [id])
}

model Company {
  id          Int     @id @default(autoincrement())
  name        String
  companyType CompanyType
  location    String?
  phone       String?

  orders         Order[]
  shipping       Shipping[]
  companyDesigns CompanyDesign[]
}

model CompanyDesign {
  id           Int     @id @default(autoincrement())
  designName   String
  companyId    Int

  company      Company @relation(fields: [companyId], references: [id])
  designImages DesignImage[]
}

model DesignImage {
  id              Int     @id @default(autoincrement())
  imageUrl        String
  companyDesignId Int

  companyDesign   CompanyDesign @relation(fields: [companyDesignId], references: [id])
}

model ProductType {
  id         Int     @id @default(autoincrement())
  name       String
  isSellable Boolean
  isPaint    Boolean

  product   Product[]
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String
  productTypeId Int

  productType       ProductType    @relation(fields: [productTypeId], references: [id])
  productVariation  ProductVariation[]
}

model ProductVariation {
  id        Int @id @default(autoincrement())
  productId Int
  colorId   Int
  name      String
  size      String
  quantity  Int
  threshold Int

  product   Product @relation(fields: [productId], references: [id])
  color     Color   @relation(fields: [colorId], references: [id])
  orderLine OrderLine[]
}

model Order {
  id          Int      @id @default(autoincrement())
  customerId  Int?
  supplierId  Int?
  orderType   OrderType
  orderStatus Int
  totalPrice  Decimal  @db.Decimal(10, 2) @default(0.00)
  date        DateTime

  customerOrder Company?  @relation("CustomerOrders", fields: [customerId], references: [id])
  supplierOrder Company?  @relation("SupplierOrders", fields: [supplierId], references: [id])
  orderLine     OrderLine[]
  shipping      Shipping?
}

model OrderLine {
  orderId             Int
  productVariationId  Int
  quantity            Int
  unitPrice           Decimal @db.Decimal(10, 2) @default(0.00)
  paintType           PaintType

  order               Order   @relation(fields: [orderId], references: [id])
  productVariation    ProductVariation @relation(fields: [productVariationId], references: [id])
  colors              OrderLineColor[]

  @@id([orderId, productVariationId])
}

model OrderLineColor {
  orderId            Int
  productVariationId Int
  colorId            Int

  orderLine OrderLine @relation(fields: [orderId, productVariationId], references: [orderId, productVariationId])
  color     Color     @relation(fields: [colorId], references: [id])

  @@id([orderId, productVariationId, colorId])
}
